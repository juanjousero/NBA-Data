import Head from 'next/head';
import Header from '../components/Header';
import { teamLogos } from '../components/Team';
import { Game } from '../components/Game';
import { useState, useEffect } from 'react';
import styles from '../styles/Games.module.css';

import { URL } from '../pages/index';
import { teamsEndpoint } from './teams';

export default function Games({ teams }) {
    const query = '?per_page=100&seasons[]=';
    const queryTeam = '&team_ids[]='
    const seasons = ['2017', '2018', '2019', '2020', '2021', '2022'];
    const [isSeasonSelected, setIsSeasonSelected] = useState(false);
    const [season, setSeason] = useState('');
    const [isTeamSelected, setIsTeamSelected] = useState(false);
    const [team, setTeam] = useState('');
    const [games, setGames] = useState([]);

    const selectSeason = (seasonSelected) => {
        setIsSeasonSelected(true);
        setSeason(seasonSelected);
    }
    
    const selectTeam = (team) => {
        setIsTeamSelected(true);
        setTeam(team);
    }

    useEffect(() => {
        if (season === '' || team ==='') {
            console.log(`${season} & ${team}`);
            async function fetchingDefaultGames() {
                const data = await fetch(`${URL}/games${query}2022`);
                const response = await data.json();
                const games = response.data;

                setGames(games);
            }
            fetchingDefaultGames();
        } else {
            async function fetchingGames () {
                const data = await fetch(`${URL}/games${query}${season}${queryTeam}${team.id}`);
                const response = await data.json();
                const games = response.data;
    
                setGames(games);
            }
            fetchingGames();
        }
    }, [team, season]);

    const resetSearch = () => {
        setIsSeasonSelected(false);
        setIsTeamSelected(false);
    }

    return (
        <>
            <Head>
                <title>üíª Games üèÄ</title>
                <meta name="description" content="Generated by create next app to test NextJS" />
            </Head>

            <Header />
            <div className={styles.container}>
                {!isSeasonSelected
                ?   <>
                        <h1>Select a season</h1>
                        <ul className={styles.list}>
                            {seasons.map((season) => 
                                <li key={season} onClick={() => selectSeason(season)}>{season}</li>
                            )}
                        </ul>
                    </>
                :   (!isTeamSelected 
                    ? <>
                        <h1>Select a team</h1>
                        <ul className={styles.list}>
                            {teams.map((team) => 
                                <li key={team.id} onClick={() => selectTeam(team)}>
                                    <img src={teamLogos[team.id - 1]}/>
                                    <p>{team.abbreviation}</p>
                                </li>
                            )}
                        </ul>
                      </>
                    : <div className={styles.scoreboard}>
                        <div>
                            <h1>{team.full_name} {season} / {Number(season) + 1} season</h1>
                            <button onClick={resetSearch}>Reset search</button>
                        </div>
                        <ul>
                            {games.map((game) => 
                                <Game key={game.id}
                                      game={game} />
                            )}
                        </ul>
                      </div>  
                      )
                }
            </div>
        </>
    )
}

export async function getStaticProps (context) {
    const data = await fetch(`${URL}${teamsEndpoint}`);
    const dataJSON = await data.json();
    const teams = dataJSON.data;

    return {
        props: {
            teams
        }
    }
}